(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    210008,       3891]
NotebookOptionsPosition[    207278,       3843]
NotebookOutlinePosition[    207621,       3858]
CellTagsIndexPosition[    207578,       3855]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Theta]r", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", ":=", " ", 
   RowBox[{"1.7595", "*", 
    SuperscriptBox["10", "11"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", ":=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["H", "app"], ":=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LL1", "[", "H_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "\[Gamma]"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Alpha]", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"m1", "[", "t", "]"}], ",", "H"}], "]"}], "+", " ", 
      RowBox[{"\[Alpha]", "*", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], ",", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"m1", "[", "t", "]"}], ",", "H"}], "]"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LL2", "[", "H_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "\[Gamma]"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Alpha]", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"m2", "[", "t", "]"}], ",", "H"}], "]"}], "+", " ", 
      RowBox[{"\[Alpha]", "*", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"m2", "[", "t", "]"}], ",", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"m2", "[", "t", "]"}], ",", "H"}], "]"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"H", "[", 
     RowBox[{
     "r_", ",", "\[Theta]_", ",", "\[Theta]off_", ",", "\[Phi]_", ",", "x1_", 
      ",", "y1_", ",", "m2_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"4", "\[Pi]", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "7"}]], "*", "3", "*", 
       RowBox[{"(", 
        SuperscriptBox["10", 
         RowBox[{"-", "19"}]], ")"}]}], 
      RowBox[{"4", "\[Pi]", 
       SuperscriptBox[
        RowBox[{"(", "r", ")"}], "5"]}]], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x1", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Theta]off", "2"], "]"}]}], "-", 
          RowBox[{"y1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "-", 
             FractionBox["\[Theta]off", "2"]}], "]"}]}]}], ")"}], "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x1", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Theta]off", "2"], "]"}]}], "-", 
          RowBox[{"y1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "-", 
             FractionBox["\[Theta]off", "2"]}], "]"}]}]}], ")"}], "*", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m2", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x1", " ", 
           RowBox[{"Sin", " ", "[", 
            FractionBox["\[Theta]off", "2"], "]"}]}], "-", 
          RowBox[{"y1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "-", " ", 
             FractionBox["\[Theta]off", "2"]}], "]"}]}]}], ")"}]}]}], ")"}], 
     "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["\[Theta]off", "2"], "]"}]}], "-", 
            RowBox[{"y1", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "-", " ", 
               FractionBox["\[Theta]off", "2"]}], "]"}]}]}], ")"}], "*", " ", 
          RowBox[{"Cos", " ", "[", "\[Phi]", "]"}]}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "*", 
           FractionBox[
            SuperscriptBox["r", "2"], "3"]}], ")"}]}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["\[Theta]off", "2"], "]"}]}], "-", 
            RowBox[{"y1", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "-", " ", 
               FractionBox["\[Theta]off", "2"]}], "]"}]}]}], ")"}], "*", 
          RowBox[{"Sin", " ", "[", "\[Phi]", "]"}]}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "*", 
           FractionBox[
            SuperscriptBox["r", "2"], "3"]}], ")"}]}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", " ", 
          RowBox[{"Sin", " ", "[", 
           FractionBox["\[Theta]off", "2"], "]"}]}], "-", 
         RowBox[{"y1", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Theta]off", "2"]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m2", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ")"}], "*", 
          FractionBox[
           SuperscriptBox["r", "2"], "3"]}]}], ")"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ro", "[", 
    RowBox[{"x1_", ",", "y1_", ",", "\[Theta]_", ",", "\[Theta]off_"}], "]"}],
    ":=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x1", "2"], "+", 
     SuperscriptBox["y1", "2"], "-", 
     RowBox[{"2", "x1", " ", "y1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "-", "\[Theta]off"}], "]"}]}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]r", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"\[Theta]", "*", 
    FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Happ", ":=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0.01"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "[", 
  RowBox[{
   RowBox[{"ro", "[", 
    RowBox[{
     RowBox[{"28.7045", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}], ",", 
     RowBox[{"28.7045", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}], ",", 
     RowBox[{"\[Theta]r", "[", 
      RowBox[{
       RowBox[{"HingeAngles", "[", 
        RowBox[{"[", "232", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172"}], "]"}], ",", 
   RowBox[{"\[Theta]r", "[", 
    RowBox[{
     RowBox[{"HingeAngles", "[", 
      RowBox[{"[", "232", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172", ",", 
   RowBox[{"\[Pi]", "/", "2"}], ",", 
   RowBox[{"28.7045", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}], ",", 
   RowBox[{"28.7045", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hf1", ":=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["H", 
    RowBox[{"th", ",", "mag"}]], "=", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"2", "*", "1.38", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "23"}]], "*", "300", "*", "\[Alpha]"}], 
      RowBox[{"\[Gamma]", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "19"}]], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "12"}]]}]], ")"}], 
    RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "list", "]"}], "\[IndentingNewLine]", 
 RowBox[{"list", "=", "Hf1"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["H", 
   RowBox[{"th", ",", "norm"}]], ":=", " ", 
  RowBox[{
   FractionBox[
    SubscriptBox["H", 
     RowBox[{"th", ",", "mag"}]], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"list", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"list", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"list", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "2"]}]]], 
   "list"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "sp"], "[", "m_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "*", "10000"}], 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "19"}]], "/", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["4", "3"], "\[Pi]", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2.5", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "9"}]]}], ")"}], "3"]}], ")"}]}]], 
       RowBox[{"m", ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.02", ",", "0.98"}], "}"}]}]}], ")"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.02", ",", "0.98"}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HingeAngles", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<E:\\\\physics stuff\\\\JH research\\\\Calculations\\\\Calculations\\\
\\HingeAngles.csv\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HingeAngles", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7959007775035653`*^9, 3.795900782515938*^9}, {
   3.79590083880903*^9, 3.7959008496487684`*^9}, {3.7959009937202826`*^9, 
   3.7959010003071156`*^9}, {3.7959011277343445`*^9, 3.795901149518016*^9}, {
   3.7959012162320385`*^9, 3.7959012457352886`*^9}, {3.7959014185192013`*^9, 
   3.795901423097535*^9}, 3.7959014598133116`*^9, 3.795901532665141*^9, {
   3.7959017740667953`*^9, 3.7959019324429293`*^9}, {3.795902047184683*^9, 
   3.7959020741835604`*^9}, 3.795902267822385*^9, {3.795902304109446*^9, 
   3.795902311730751*^9}, {3.7959025644391766`*^9, 3.79590256567412*^9}, 
   3.7959026430027804`*^9, 3.795902692277858*^9, {3.795902736867225*^9, 
   3.795903034069746*^9}, 3.795903101880684*^9, {3.7959032283638334`*^9, 
   3.795903264503167*^9}, {3.795903493526343*^9, 3.7959034953016834`*^9}, {
   3.7959037561029367`*^9, 3.7959037908100615`*^9}, {3.7959039239885435`*^9, 
   3.795903924669573*^9}, {3.7959039814538097`*^9, 3.7959039948754034`*^9}, {
   3.7959040658982615`*^9, 3.7959040683979673`*^9}, {3.795904098681284*^9, 
   3.79590413941646*^9}, {3.7959041815753775`*^9, 3.79590418612445*^9}, {
   3.7959047178672714`*^9, 3.795904776291461*^9}, {3.795904832568259*^9, 
   3.795904854483529*^9}, {3.795905004068985*^9, 3.795905131182183*^9}, {
   3.795905300806284*^9, 3.795905363477417*^9}, 3.795905408377801*^9, {
   3.796684745247357*^9, 3.796684752101588*^9}, {3.7966854304886217`*^9, 
   3.7966854307066364`*^9}, {3.7970374625761557`*^9, 
   3.7970374900675516`*^9}, {3.797037693967208*^9, 3.7970378096358156`*^9}, {
   3.7970378532891054`*^9, 3.7970379892773685`*^9}, {3.797038049214258*^9, 
   3.797038065377801*^9}, {3.7970382498866987`*^9, 3.7970382627472878`*^9}, {
   3.797038298030444*^9, 3.797038565721626*^9}, {3.797038757184455*^9, 
   3.797038764723873*^9}, {3.797106389755491*^9, 3.797106391233186*^9}, {
   3.7971064822938557`*^9, 3.7971065463574038`*^9}, {3.79710663560959*^9, 
   3.7971066448217154`*^9}, {3.7971069938063993`*^9, 3.79710704084739*^9}, {
   3.797107090557654*^9, 3.7971070926512375`*^9}, {3.797107151512839*^9, 
   3.7971071614616575`*^9}, {3.7971072477747135`*^9, 
   3.7971072484096947`*^9}, {3.7971074371943374`*^9, 
   3.7971074456294484`*^9}, {3.797107549153839*^9, 3.797107560031353*^9}, {
   3.7971078479244294`*^9, 3.797107963987064*^9}, {3.797108018282839*^9, 
   3.79710802015558*^9}, 3.7971080587925196`*^9, {3.797108331647023*^9, 
   3.797108339007331*^9}, {3.797108383727995*^9, 3.797108493898634*^9}, {
   3.797108552434022*^9, 3.797108598988863*^9}, {3.7971086291614337`*^9, 
   3.7971086310496016`*^9}, {3.797108716123317*^9, 3.7971087633080235`*^9}, {
   3.7971088227509704`*^9, 3.7971090249473553`*^9}, {3.7971091092336807`*^9, 
   3.797109176159378*^9}, {3.797109211256893*^9, 3.797109342165386*^9}, {
   3.7971093879886703`*^9, 3.7971094278238897`*^9}, {3.797110723701903*^9, 
   3.797110752179456*^9}, {3.797110796444038*^9, 3.7971107969810905`*^9}, {
   3.797110852292321*^9, 3.7971110546961217`*^9}, {3.7971116776429405`*^9, 
   3.797111742861832*^9}, {3.7971121240332537`*^9, 3.7971121266914577`*^9}, {
   3.797112172740835*^9, 3.7971122168673043`*^9}, {3.797183466179083*^9, 
   3.79718349820158*^9}, {3.7971846250066643`*^9, 3.7971846295540657`*^9}, {
   3.7971855552080708`*^9, 3.797185588269613*^9}, {3.797185747704978*^9, 
   3.797185748412034*^9}, {3.79718582351012*^9, 3.797185858262258*^9}, {
   3.797186563958429*^9, 3.7971865791145835`*^9}, {3.7971876059237986`*^9, 
   3.797187639772603*^9}, {3.797197576503804*^9, 3.797197697031783*^9}, {
   3.797197829567283*^9, 3.797198002320777*^9}, {3.79719932491607*^9, 
   3.7971993422233915`*^9}, 3.797199516134699*^9, {3.7972002742925634`*^9, 
   3.797200281014304*^9}, {3.797200312504096*^9, 3.7972003190518937`*^9}, {
   3.7972004861584396`*^9, 3.7972005037080364`*^9}, {3.7972013875022*^9, 
   3.7972014090303*^9}, {3.7972746321508884`*^9, 3.7972746460338287`*^9}, {
   3.7972747080860434`*^9, 3.7972747491640606`*^9}, {3.7972747946463423`*^9, 
   3.7972749498058095`*^9}, 3.797275048653266*^9, {3.79727514727209*^9, 
   3.797275254879485*^9}, {3.797275330648522*^9, 3.79727538621903*^9}, {
   3.797275423372732*^9, 3.797275470760919*^9}, {3.7972760135639105`*^9, 
   3.7972760576747704`*^9}, {3.797276277221893*^9, 3.7972763019505267`*^9}, {
   3.7972776173481255`*^9, 3.7972776178071594`*^9}, {3.797277776410453*^9, 
   3.79727777678148*^9}, {3.7972797336532345`*^9, 3.797279734738329*^9}, {
   3.7972797708669243`*^9, 3.79727977145848*^9}, {3.7972990024050255`*^9, 
   3.7972990364530387`*^9}, {3.7972990694419093`*^9, 
   3.7972993727771406`*^9}, {3.7972994732779245`*^9, 
   3.7972994751760197`*^9}, {3.7972997090804815`*^9, 3.797299710203382*^9}, {
   3.797300369851881*^9, 3.7973003915825753`*^9}, {3.797300687493662*^9, 
   3.797300706120705*^9}, {3.7973007479020405`*^9, 3.7973008152658377`*^9}, {
   3.797709285560003*^9, 3.7977092927816286`*^9}, {3.797709336147359*^9, 
   3.7977093464042425`*^9}, 3.7977093823203373`*^9, {3.797799949575613*^9, 
   3.797800089428181*^9}, {3.797800361221347*^9, 3.7978003668253164`*^9}, {
   3.7978005385553584`*^9, 3.797800551802092*^9}, {3.7978008291308413`*^9, 
   3.797800850212549*^9}, {3.797800903245039*^9, 3.7978009078919497`*^9}, {
   3.797800940216648*^9, 3.7978010656964846`*^9}, {3.797803861733883*^9, 
   3.7978038754552*^9}, {3.7982100956524796`*^9, 3.798210109115431*^9}, 
   3.798210204624058*^9, {3.7982104684119387`*^9, 3.7982104765848017`*^9}, {
   3.79821055332648*^9, 3.7982105596266265`*^9}, 3.7982121078287354`*^9, 
   3.7982121409038534`*^9, {3.8001405690943403`*^9, 3.800140616105671*^9}, {
   3.8001433329361515`*^9, 3.8001433361545486`*^9}, {3.8088580961457443`*^9, 
   3.8088580987672477`*^9}, 3.8088581359656706`*^9, {3.8088610514353247`*^9, 
   3.8088610596483526`*^9}, {3.8088611675706005`*^9, 3.808861171691184*^9}, {
   3.808861276083826*^9, 3.8088612785183372`*^9}, {3.8088613545723467`*^9, 
   3.808861407725834*^9}, {3.8088614685596313`*^9, 3.808861491482849*^9}, {
   3.808952557592122*^9, 3.808952558400183*^9}, {3.809298525893399*^9, 
   3.8092985666939964`*^9}, {3.809384533257101*^9, 3.8093845334701185`*^9}, {
   3.8102574345089273`*^9, 3.810257440748025*^9}, {3.8117159061911745`*^9, 
   3.811715952150461*^9}, 3.8117183208723955`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"3c08952d-4d52-4f35-9af1-12498108e3df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "0.004554991247260088`"}], ",", "0.012753391849755083`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7973004334640274`*^9, 3.7973007798279753`*^9, {3.7973008252831106`*^9, 
   3.797300845187126*^9}, 3.7977999866562233`*^9, 3.7978003338002386`*^9, 
   3.797800381058444*^9, {3.797800462107669*^9, 3.7978004759124527`*^9}, 
   3.7978006179652815`*^9, 3.7978008728863754`*^9, 3.797800913739744*^9, 
   3.797800964849174*^9, {3.7978010422299356`*^9, 3.797801067934167*^9}, {
   3.797801404902167*^9, 3.797801421381714*^9}, 3.798210115032601*^9, 
   3.7982102092497826`*^9, 3.798210480077084*^9, 3.798210560541134*^9, {
   3.7982121089636927`*^9, 3.7982121419919453`*^9}, 3.798911666548505*^9, {
   3.7989118586607676`*^9, 3.7989118671171556`*^9}, 3.799013071279194*^9, 
   3.7990221953895583`*^9, {3.7990804733696604`*^9, 3.7990804798123927`*^9}, {
   3.799453786934066*^9, 3.7994537918748612`*^9}, {3.7994547844563904`*^9, 
   3.7994547931202793`*^9}, {3.7995001189991927`*^9, 3.799500122979553*^9}, {
   3.7995002134348*^9, 3.7995002172834787`*^9}, {3.7995005394420176`*^9, 
   3.7995005438512335`*^9}, {3.7995006656652937`*^9, 
   3.7995006688377895`*^9}, {3.80013943835201*^9, 3.8001394418007927`*^9}, {
   3.8004002028019247`*^9, 3.800400206369383*^9}, {3.8006187852165995`*^9, 
   3.800618789139115*^9}, {3.800641519776173*^9, 3.8006415252465124`*^9}, {
   3.8006599039917855`*^9, 3.800659906935915*^9}, {3.800660013724494*^9, 
   3.8006600173746867`*^9}, {3.800660327944501*^9, 3.8006603308796177`*^9}, {
   3.800660394603306*^9, 3.8006603974137564`*^9}, {3.8008118787843223`*^9, 
   3.800811881696681*^9}, {3.800812249201121*^9, 3.800812252022775*^9}, {
   3.800813890379674*^9, 3.8008138931931505`*^9}, {3.8010045415079117`*^9, 
   3.801004545203068*^9}, {3.801265064984344*^9, 3.8012650677298613`*^9}, {
   3.8012652143821244`*^9, 3.8012652171918592`*^9}, {3.8015905579221783`*^9, 
   3.801590560018536*^9}, 3.8015906163697863`*^9, 3.8015908715913887`*^9, 
   3.801591272078026*^9, 3.801593085660973*^9, {3.801676361292403*^9, 
   3.8016763635132446`*^9}, {3.801859505620076*^9, 3.8018595083328257`*^9}, {
   3.8033305519009137`*^9, 3.803330554656568*^9}, {3.8033306831539516`*^9, 
   3.8033306859753695`*^9}, {3.803664554194006*^9, 3.803664556769091*^9}, {
   3.804211397346265*^9, 3.8042114081982527`*^9}, {3.804262898523261*^9, 
   3.8042629009567547`*^9}, {3.8042629865927744`*^9, 3.804262989284577*^9}, {
   3.8042637772426896`*^9, 3.8042637795235586`*^9}, {3.8044696524615993`*^9, 
   3.804469657936923*^9}, {3.8052790578904805`*^9, 3.8052790629439573`*^9}, 
   3.8088610219401236`*^9, {3.808861056455599*^9, 3.8088610876453457`*^9}, 
   3.808861181027871*^9, {3.8088614303699694`*^9, 3.8088614415753007`*^9}, {
   3.808861472421642*^9, 3.808861493117595*^9}, {3.808952561302616*^9, 
   3.8089525690813627`*^9}, {3.8090278034081354`*^9, 3.809027808661659*^9}, 
   3.8090278413835993`*^9, {3.8090385434716015`*^9, 3.8090385477729263`*^9}, {
   3.8092984935517907`*^9, 3.809298497476985*^9}, 3.8092987143284936`*^9, 
   3.80930241209171*^9, {3.809384536435345*^9, 3.8093845401331525`*^9}, {
   3.8099037030722*^9, 3.809903707836591*^9}, {3.8102576625678663`*^9, 
   3.810257670912446*^9}, {3.8115035284772973`*^9, 3.8115035340953417`*^9}, {
   3.811504657420082*^9, 3.8115046655527*^9}, {3.8115056185889854`*^9, 
   3.8115056228420153`*^9}, 3.8115057180918193`*^9, {3.811506876555297*^9, 
   3.811506880056899*^9}, {3.811511511456603*^9, 3.8115115155008574`*^9}, 
   3.8115141162585907`*^9, {3.8117151469748983`*^9, 3.8117151540909443`*^9}, {
   3.811716988983374*^9, 3.811717026464243*^9}, {3.811717617255828*^9, 
   3.811717621154378*^9}, {3.8117182662454505`*^9, 3.811718283042564*^9}, {
   3.8117183275156307`*^9, 3.8117183311379485`*^9}, {3.8117184691149616`*^9, 
   3.8117184717548685`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"a19a9419-e983-4352-af18-7cf6d2c8b169"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7759238579571787`", ",", 
   RowBox[{"-", "0.7604847499870618`"}], ",", "0.4858468319546898`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7973004334640274`*^9, 3.7973007798279753`*^9, {3.7973008252831106`*^9, 
   3.797300845187126*^9}, 3.7977999866562233`*^9, 3.7978003338002386`*^9, 
   3.797800381058444*^9, {3.797800462107669*^9, 3.7978004759124527`*^9}, 
   3.7978006179652815`*^9, 3.7978008728863754`*^9, 3.797800913739744*^9, 
   3.797800964849174*^9, {3.7978010422299356`*^9, 3.797801067934167*^9}, {
   3.797801404902167*^9, 3.797801421381714*^9}, 3.798210115032601*^9, 
   3.7982102092497826`*^9, 3.798210480077084*^9, 3.798210560541134*^9, {
   3.7982121089636927`*^9, 3.7982121419919453`*^9}, 3.798911666548505*^9, {
   3.7989118586607676`*^9, 3.7989118671171556`*^9}, 3.799013071279194*^9, 
   3.7990221953895583`*^9, {3.7990804733696604`*^9, 3.7990804798123927`*^9}, {
   3.799453786934066*^9, 3.7994537918748612`*^9}, {3.7994547844563904`*^9, 
   3.7994547931202793`*^9}, {3.7995001189991927`*^9, 3.799500122979553*^9}, {
   3.7995002134348*^9, 3.7995002172834787`*^9}, {3.7995005394420176`*^9, 
   3.7995005438512335`*^9}, {3.7995006656652937`*^9, 
   3.7995006688377895`*^9}, {3.80013943835201*^9, 3.8001394418007927`*^9}, {
   3.8004002028019247`*^9, 3.800400206369383*^9}, {3.8006187852165995`*^9, 
   3.800618789139115*^9}, {3.800641519776173*^9, 3.8006415252465124`*^9}, {
   3.8006599039917855`*^9, 3.800659906935915*^9}, {3.800660013724494*^9, 
   3.8006600173746867`*^9}, {3.800660327944501*^9, 3.8006603308796177`*^9}, {
   3.800660394603306*^9, 3.8006603974137564`*^9}, {3.8008118787843223`*^9, 
   3.800811881696681*^9}, {3.800812249201121*^9, 3.800812252022775*^9}, {
   3.800813890379674*^9, 3.8008138931931505`*^9}, {3.8010045415079117`*^9, 
   3.801004545203068*^9}, {3.801265064984344*^9, 3.8012650677298613`*^9}, {
   3.8012652143821244`*^9, 3.8012652171918592`*^9}, {3.8015905579221783`*^9, 
   3.801590560018536*^9}, 3.8015906163697863`*^9, 3.8015908715913887`*^9, 
   3.801591272078026*^9, 3.801593085660973*^9, {3.801676361292403*^9, 
   3.8016763635132446`*^9}, {3.801859505620076*^9, 3.8018595083328257`*^9}, {
   3.8033305519009137`*^9, 3.803330554656568*^9}, {3.8033306831539516`*^9, 
   3.8033306859753695`*^9}, {3.803664554194006*^9, 3.803664556769091*^9}, {
   3.804211397346265*^9, 3.8042114081982527`*^9}, {3.804262898523261*^9, 
   3.8042629009567547`*^9}, {3.8042629865927744`*^9, 3.804262989284577*^9}, {
   3.8042637772426896`*^9, 3.8042637795235586`*^9}, {3.8044696524615993`*^9, 
   3.804469657936923*^9}, {3.8052790578904805`*^9, 3.8052790629439573`*^9}, 
   3.8088610219401236`*^9, {3.808861056455599*^9, 3.8088610876453457`*^9}, 
   3.808861181027871*^9, {3.8088614303699694`*^9, 3.8088614415753007`*^9}, {
   3.808861472421642*^9, 3.808861493117595*^9}, {3.808952561302616*^9, 
   3.8089525690813627`*^9}, {3.8090278034081354`*^9, 3.809027808661659*^9}, 
   3.8090278413835993`*^9, {3.8090385434716015`*^9, 3.8090385477729263`*^9}, {
   3.8092984935517907`*^9, 3.809298497476985*^9}, 3.8092987143284936`*^9, 
   3.80930241209171*^9, {3.809384536435345*^9, 3.8093845401331525`*^9}, {
   3.8099037030722*^9, 3.809903707836591*^9}, {3.8102576625678663`*^9, 
   3.810257670912446*^9}, {3.8115035284772973`*^9, 3.8115035340953417`*^9}, {
   3.811504657420082*^9, 3.8115046655527*^9}, {3.8115056185889854`*^9, 
   3.8115056228420153`*^9}, 3.8115057180918193`*^9, {3.811506876555297*^9, 
   3.811506880056899*^9}, {3.811511511456603*^9, 3.8115115155008574`*^9}, 
   3.8115141162585907`*^9, {3.8117151469748983`*^9, 3.8117151540909443`*^9}, {
   3.811716988983374*^9, 3.811717026464243*^9}, {3.811717617255828*^9, 
   3.811717621154378*^9}, {3.8117182662454505`*^9, 3.811718283042564*^9}, {
   3.8117183275156307`*^9, 3.8117183311379485`*^9}, {3.8117184691149616`*^9, 
   3.8117184717578588`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"9f85de41-e7f4-4381-b3de-4f680e0f2a9c"],

Cell[BoxData["0.17017017`"], "Output",
 CellChangeTimes->{
  3.7973004334640274`*^9, 3.7973007798279753`*^9, {3.7973008252831106`*^9, 
   3.797300845187126*^9}, 3.7977999866562233`*^9, 3.7978003338002386`*^9, 
   3.797800381058444*^9, {3.797800462107669*^9, 3.7978004759124527`*^9}, 
   3.7978006179652815`*^9, 3.7978008728863754`*^9, 3.797800913739744*^9, 
   3.797800964849174*^9, {3.7978010422299356`*^9, 3.797801067934167*^9}, {
   3.797801404902167*^9, 3.797801421381714*^9}, 3.798210115032601*^9, 
   3.7982102092497826`*^9, 3.798210480077084*^9, 3.798210560541134*^9, {
   3.7982121089636927`*^9, 3.7982121419919453`*^9}, 3.798911666548505*^9, {
   3.7989118586607676`*^9, 3.7989118671171556`*^9}, 3.799013071279194*^9, 
   3.7990221953895583`*^9, {3.7990804733696604`*^9, 3.7990804798123927`*^9}, {
   3.799453786934066*^9, 3.7994537918748612`*^9}, {3.7994547844563904`*^9, 
   3.7994547931202793`*^9}, {3.7995001189991927`*^9, 3.799500122979553*^9}, {
   3.7995002134348*^9, 3.7995002172834787`*^9}, {3.7995005394420176`*^9, 
   3.7995005438512335`*^9}, {3.7995006656652937`*^9, 
   3.7995006688377895`*^9}, {3.80013943835201*^9, 3.8001394418007927`*^9}, {
   3.8004002028019247`*^9, 3.800400206369383*^9}, {3.8006187852165995`*^9, 
   3.800618789139115*^9}, {3.800641519776173*^9, 3.8006415252465124`*^9}, {
   3.8006599039917855`*^9, 3.800659906935915*^9}, {3.800660013724494*^9, 
   3.8006600173746867`*^9}, {3.800660327944501*^9, 3.8006603308796177`*^9}, {
   3.800660394603306*^9, 3.8006603974137564`*^9}, {3.8008118787843223`*^9, 
   3.800811881696681*^9}, {3.800812249201121*^9, 3.800812252022775*^9}, {
   3.800813890379674*^9, 3.8008138931931505`*^9}, {3.8010045415079117`*^9, 
   3.801004545203068*^9}, {3.801265064984344*^9, 3.8012650677298613`*^9}, {
   3.8012652143821244`*^9, 3.8012652171918592`*^9}, {3.8015905579221783`*^9, 
   3.801590560018536*^9}, 3.8015906163697863`*^9, 3.8015908715913887`*^9, 
   3.801591272078026*^9, 3.801593085660973*^9, {3.801676361292403*^9, 
   3.8016763635132446`*^9}, {3.801859505620076*^9, 3.8018595083328257`*^9}, {
   3.8033305519009137`*^9, 3.803330554656568*^9}, {3.8033306831539516`*^9, 
   3.8033306859753695`*^9}, {3.803664554194006*^9, 3.803664556769091*^9}, {
   3.804211397346265*^9, 3.8042114081982527`*^9}, {3.804262898523261*^9, 
   3.8042629009567547`*^9}, {3.8042629865927744`*^9, 3.804262989284577*^9}, {
   3.8042637772426896`*^9, 3.8042637795235586`*^9}, {3.8044696524615993`*^9, 
   3.804469657936923*^9}, {3.8052790578904805`*^9, 3.8052790629439573`*^9}, 
   3.8088610219401236`*^9, {3.808861056455599*^9, 3.8088610876453457`*^9}, 
   3.808861181027871*^9, {3.8088614303699694`*^9, 3.8088614415753007`*^9}, {
   3.808861472421642*^9, 3.808861493117595*^9}, {3.808952561302616*^9, 
   3.8089525690813627`*^9}, {3.8090278034081354`*^9, 3.809027808661659*^9}, 
   3.8090278413835993`*^9, {3.8090385434716015`*^9, 3.8090385477729263`*^9}, {
   3.8092984935517907`*^9, 3.809298497476985*^9}, 3.8092987143284936`*^9, 
   3.80930241209171*^9, {3.809384536435345*^9, 3.8093845401331525`*^9}, {
   3.8099037030722*^9, 3.809903707836591*^9}, {3.8102576625678663`*^9, 
   3.810257670912446*^9}, {3.8115035284772973`*^9, 3.8115035340953417`*^9}, {
   3.811504657420082*^9, 3.8115046655527*^9}, {3.8115056185889854`*^9, 
   3.8115056228420153`*^9}, 3.8115057180918193`*^9, {3.811506876555297*^9, 
   3.811506880056899*^9}, {3.811511511456603*^9, 3.8115115155008574`*^9}, 
   3.8115141162585907`*^9, {3.8117151469748983`*^9, 3.8117151540909443`*^9}, {
   3.811716988983374*^9, 3.811717026464243*^9}, {3.811717617255828*^9, 
   3.811717621154378*^9}, {3.8117182662454505`*^9, 3.811718283042564*^9}, {
   3.8117183275156307`*^9, 3.8117183311379485`*^9}, {3.8117184691149616`*^9, 
   3.8117184718665676`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"4e776315-b7d3-4a0e-806f-2354d7ce89cc"]
}, Open  ]],

Cell["\<\
If there is an error saying Hinge Angles longer than depth of object, then \
execute the hinge angles import \
\>", "Text",
 CellChangeTimes->{{3.798911887496702*^9, 3.798911929644968*^9}, {
  3.798912035425131*^9, 
  3.7989120501447973`*^9}},ExpressionUUID->"558b5223-7ba7-4d79-b1d6-\
547ba459983c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"m1", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"LL1", "[", 
         RowBox[{
          SubscriptBox["H", 
           RowBox[{"th", ",", "norm"}]], "+", 
          RowBox[{
           SubscriptBox["H", "sp"], "[", 
           RowBox[{"m1", "[", "t", "]"}], "]"}], "+", 
          RowBox[{"H", "[", 
           RowBox[{
            RowBox[{"ro", "[", 
             RowBox[{
              RowBox[{"18.322", "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "9"}]]}], ",", 
              RowBox[{"18.322", "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "9"}]]}], ",", 
              RowBox[{"\[Theta]r", "[", 
               RowBox[{
                RowBox[{"HingeAngles", "[", 
                 RowBox[{"[", "232", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.369074"}], 
             "]"}], ",", 
            RowBox[{"\[Theta]r", "[", 
             RowBox[{
              RowBox[{"HingeAngles", "[", 
               RowBox[{"[", "232", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.369074", ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", 
            RowBox[{"18.322", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]]}], ",", 
            RowBox[{"18.322", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{
        RowBox[{"m1", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "}"}], ",", "m1", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "7"}]]}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], "/.", "sols"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], "/.", "sols"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], "/.", "sols"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"6", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<mx\>\"", ",", "\"\<my\>\"", ",", "\"\<mz\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.811718794240505*^9, 3.81171879507129*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"dd1725b2-2fe0-4d28-ab13-779cf56181b1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
n/f5sJdL86oabfC7+4R3v/8Dp6pAUw==
          "]]}, Annotation[#, "Charting`Private`Tag$222498#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUmnc8198Xx+299+ZjZyQixPu8VTKSlGSnkkqJVEIqRUilshVZfaWSZCep
S0alQcpWZK/Px97rd3/+8Xg+7n3fc8+557zuuY/Hh+J+zvYEAx0dnQwbHd3/
/1dpsY7GPM00TjfYwH8T5NrPrbz0W24Qq7v9BBzWJsiJNd6aP1rRhI3rsWSb
uQmyRyCC7p35Q8LO05Glc2iCHBYMlvmmlUGc2UvTmfo9QR6VeVtRbpRF3Bb/
9Si6YoJsU511fmH+nOCil9f+kDZB7t+qtZR0MJfI2RMRH35lguyXKbGq1son
htrmmZZsJ0i5rKbkcr1CYktU6kVtpQnSddPkSIFRMSGgdyps3zSNfJjHbfhi
RymRIZl42b+cRv7eqh6ZYV5GlL+HzJZrNJLvrUVrknU5UZpcvPeJMY3cCyeV
HxysIN5dMFYSWqCS7ln7ez9oVRK7f5qpzh6hknSnum+X61QROWkzpQs8VDJt
k492qd5Hontx/tLX8nGyI+/ujVdGNUSh6NhBW45x0vZtncxj88/EwNtHymLx
o+TklUN1SXu+EMJc+vovdUfJ+9DvHWddTyyF/wz0bR4h66vp3985+I1w5V9K
vSc+QnpGRHtE2H8ntEcd2YffD5MslrJcoU4/iKlE0ROBHsMk5VTaqwqtRmLP
/l2CpuVDpO/nEyHbCxqJpvaKkBtnhsjKTZqHynR+Ev+NrB+ZkRkiee/Oqm4r
/kkkbj9yQ7htkHQbf7dapNdENJXHU50TB8lX1jcbtd80EfXFO5V1nAfJ1bw9
Wa8NfhGWxHUdBsVB0opPIFCz/Bfx8/KuAPXZATL5fLvVS6PfxOey/cxMXwfI
kaYM2U3vfxMvft+K63g+QBroes5kQzPR/iJKc/LeAHkrQeuTYmUzATMQFxw0
QLbMzyc/2dFCfPbLsHntM0AqOX7wkatuIWpSBR/8d2aA9HsbvjPNtJX4V7vD
2AuPV0tYi0jVtRJp1bUJXPh7gatCo4/M24g2eY1zV/H6x/50vhf90kZ8vHw6
Nwvbz4f/YhL2tBPTHTX+bnh/G+lnTgh+aycMDENX/ecGyH30OoYx1h1Eit0h
2VzlQTLVfYmLt6GDCHMQUnztNkiOV1f2RO3vJKRezDMopg6SRkqRxRxNnUTS
g+NcT/4NkncibCIjD3YRPZPimSXqQ2T7kIgrS3MXcfnZMbXuoCFS1fKvVpj9
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
          "]]}, Annotation[#, "Charting`Private`Tag$222498#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mA==
          "]]}, Annotation[#, "Charting`Private`Tag$222498#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{0, 
         Rational[3, 500000000]}, {-0.9999482370768612, 
        0.9999999999943333}}, {{0, 6.*^-9}, {-0.9999482370768612, 
        0.9999999999943333}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"mx\"", "\"my\"", "\"mz\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8117187961104937`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"2b5e8b65-c48c-4b34-a227-0e4e2c74efa1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.798220753538031*^9, 3.798220754113446*^9}, {
  3.798234400849124*^9, 3.7982344011014986`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0cd3c221-256f-4342-9f56-9b4ff472d154"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"\"\<FOR ALL ANGLES\>\"", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"finalm1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"finalm2", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", " ", 
     RowBox[{"i", "\[LessEqual]", "10"}], ",", " ", 
     RowBox[{"i", "=", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"testcase2", "=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "=", "0"}], ",", 
             RowBox[{"t0", "=", "0"}], ",", 
             RowBox[{"tf", "=", 
              RowBox[{"5", "*", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "9"}], ")"}]}]}]}], ",", 
             RowBox[{"dt", "=", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "11"}], ")"}]}]}], ",", 
             RowBox[{"m1val", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
             RowBox[{"m2val", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Hf2", ":=", 
                 RowBox[{"RandomVariate", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", "]"}], ",", "3"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Clear", "[", "list1", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"list1", "=", "Hf2"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                SubscriptBox["H", 
                 RowBox[{"th", ",", "norm"}]], ":=", " ", 
                RowBox[{
                 FractionBox[
                  SubscriptBox["H", 
                   RowBox[{"th", ",", "mag"}]], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"list1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"list1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"list1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "2"]}]]], "list1"}]}]}], 
              "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"EvenQ", "[", "a", "]"}], ",", 
                 RowBox[{
                  RowBox[{"sol1", "=", 
                   RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"m1", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"LL1", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"H", ",", "sp"}], "]"}], "[", 
                    RowBox[{"m1", "[", "t", "]"}], "]"}], "+", 
                    SubscriptBox["H", 
                    RowBox[{"th", ",", "norm"}]], "+", 
                    RowBox[{"H", "[", 
                    RowBox[{
                    RowBox[{"ro", "[", 
                    RowBox[{
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", 
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", 
                    RowBox[{"\[Theta]r", "[", 
                    RowBox[{
                    RowBox[{"HingeAngles", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172"}], 
                    "]"}], ",", 
                    RowBox[{"\[Theta]r", "[", 
                    RowBox[{
                    RowBox[{"HingeAngles", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172", 
                    ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", 
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", 
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", "m2val"}], "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"m1", "[", "j", "]"}], "\[Equal]", "m1val"}]}], 
                    "}"}], ",", "m1", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "j", ",", 
                    RowBox[{"j", "+", "dt"}]}], "}"}], ",", 
                    RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}],
                   ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"m1", "[", "t", "]"}], "/.", "sol1"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"m1val", "=", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"m1", "[", "t", "]"}], "/.", "sol1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{"t", "\[Rule]", 
                    RowBox[{"j", "+", "dt"}]}], "}"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"a", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"sol1", ",", "m1val"}], "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"sol2", "=", 
                   RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"m2", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"LL2", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"H", ",", "sp"}], "]"}], "[", 
                    RowBox[{"m2", "[", "t", "]"}], "]"}], "+", 
                    SubscriptBox["H", 
                    RowBox[{"th", ",", "norm"}]], "+", 
                    RowBox[{"H", "[", 
                    RowBox[{
                    RowBox[{"ro", "[", 
                    RowBox[{
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", 
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", 
                    RowBox[{"\[Theta]r", "[", 
                    RowBox[{
                    RowBox[{"HingeAngles", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172"}], 
                    "]"}], ",", 
                    RowBox[{"\[Theta]r", "[", 
                    RowBox[{
                    RowBox[{"HingeAngles", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172", 
                    ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", 
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", 
                    RowBox[{"28.7045", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "9"}]]}], ",", "m1val"}], "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"m2", "[", "j", "]"}], "\[Equal]", "m2val"}]}], 
                    "}"}], ",", "m2", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "j", ",", 
                    RowBox[{"j", "+", "dt"}]}], "}"}], ",", 
                    RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}],
                   ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"m2", "[", "t", "]"}], "/.", "sol2"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"m2val", "=", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"m2", "[", "t", "]"}], "/.", "sol2"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{"t", "\[Rule]", 
                    RowBox[{"j", "+", "dt"}]}], "}"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"a", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"sol2", ",", "m2val"}], "}"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "t0", ",", "tf", ",", "dt"}], "}"}]}], 
              "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"finalm1", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"testcase2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "501", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"finalm2", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"testcase2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "500", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "}"}]}], "}"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8036641636092615`*^9, 3.8036641787098985`*^9}, {
   3.8036642529680805`*^9, 3.803664253523596*^9}, {3.8036646065391026`*^9, 
   3.8036646192511168`*^9}, {3.8036648446785746`*^9, 3.803664851071488*^9}, {
   3.8036648841551175`*^9, 3.8036649463189135`*^9}, {3.804208251869481*^9, 
   3.8042082519492917`*^9}, {3.80421099756525*^9, 3.8042110497676597`*^9}, {
   3.804211258687996*^9, 3.8042113439809413`*^9}, {3.804262006495487*^9, 
   3.804262006775755*^9}, {3.8042621840646496`*^9, 3.8042621842083178`*^9}, {
   3.8088657689743075`*^9, 3.808865791598062*^9}, {3.808952382661335*^9, 
   3.8089524063596516`*^9}, {3.8090279883994246`*^9, 
   3.8090279895495114`*^9}, {3.809037640156545*^9, 3.8090376617001767`*^9}, {
   3.8090378989956384`*^9, 3.8090379063901987`*^9}, {3.809038050855275*^9, 
   3.8090380596929307`*^9}, {3.8090384463812494`*^9, 
   3.8090384630075083`*^9}, {3.8092986102989793`*^9, 3.809298651738366*^9}, {
   3.809298806344859*^9, 3.8092988071509275`*^9}, {3.8099035803112645`*^9, 
   3.8099036119495554`*^9}, {3.8102574757159014`*^9, 3.810257488006299*^9}, 
   3.8115032597677193`*^9, 3.8115033435417533`*^9, {3.811503510620711*^9, 
   3.811503510920788*^9}, {3.811503699214161*^9, 3.811503711942308*^9}, {
   3.8115038423558292`*^9, 3.8115038485432773`*^9}, {3.811504497710901*^9, 
   3.811504502431259*^9}, {3.811505629988634*^9, 3.811505637250704*^9}, {
   3.8115067591565623`*^9, 3.811506809075001*^9}, {3.8115113396085925`*^9, 
   3.811511395680431*^9}, {3.811511445745122*^9, 3.8115114666815424`*^9}, {
   3.811513969736472*^9, 3.8115140183671923`*^9}, {3.8115141401760607`*^9, 
   3.8115141592116947`*^9}, {3.811514218715822*^9, 3.8115142230279474`*^9}, {
   3.811514917994214*^9, 3.8115149188902817`*^9}, {3.811714879363614*^9, 
   3.811714913682731*^9}, {3.811715051056009*^9, 3.8117150538325977`*^9}, {
   3.811715115611862*^9, 3.8117151246630683`*^9}, {3.811715415614354*^9, 
   3.811715426035491*^9}, {3.811715459022629*^9, 3.8117154646436677`*^9}, {
   3.8117156822396297`*^9, 3.811715726790139*^9}, 3.811716050802602*^9, 
   3.8117161618899393`*^9, {3.811716297246609*^9, 3.811716329267889*^9}, {
   3.8117164733922825`*^9, 3.8117165157530413`*^9}, {3.81171660893347*^9, 
   3.8117166606201544`*^9}, {3.8117168168725243`*^9, 3.8117168288714695`*^9}, 
   3.8117169529946985`*^9, {3.8117176008211327`*^9, 3.811717607165064*^9}, {
   3.8117184422827225`*^9, 3.811718445234825*^9}, {3.811718496932536*^9, 
   3.8117185040395627`*^9}, {3.811718661472516*^9, 3.811718678238718*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"de89150b-bc74-4280-9500-6a5dac250a6d"],

Cell[BoxData["\<\"FOR ALL ANGLES\"\>"], "Output",
 CellChangeTimes->{
  3.811514228249321*^9, 3.8115150078561068`*^9, 3.811715136180496*^9, 
   3.8117151672717705`*^9, 3.8117154735908885`*^9, 3.8117157322185855`*^9, 
   3.811715850623928*^9, 3.811716174754425*^9, 3.8117163124695473`*^9, 
   3.811716481020132*^9, 3.8117165206424737`*^9, 3.8117169677428904`*^9, 
   3.8117170382962627`*^9, 3.8117176311760263`*^9, 3.811718376774906*^9, 
   3.8117184460964837`*^9, {3.8117184830636244`*^9, 3.8117185048423824`*^9}, 
   3.8117186815478296`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"06412c76-5586-4c3c-92c1-60adbcb06d71"]
}, Open  ]],

Cell["\<\
2 LISTS ARE CREATED TO STORE THE VALUES OF \[OpenCurlyQuote]m1\
\[CloseCurlyQuote] AND \[OpenCurlyQuote]m2\[CloseCurlyQuote] AT A TIME WHEN \
BOTH OF THEM ARE FAIRLY CONSTANT (5ns IN THIS CASE), FOR ALL ANGLES\
\>", "Text",
 CellChangeTimes->{{3.804271676711811*^9, 3.8042717332436914`*^9}, {
  3.8042717714006557`*^9, 
  3.8042717742221327`*^9}},ExpressionUUID->"a39b1e15-c657-444a-b39b-\
db7b925c3301"],

Cell["\<\
2 LISTS ARE CREATED TO STORE THE MAGNETIC FEILDS OF THE 2 SPIONS AT THE \
VALUES FOR \[OpenCurlyQuote]m1\[CloseCurlyQuote] AND \[OpenCurlyQuote]m2\
\[CloseCurlyQuote] FROM THE ABOVE LISTS\
\>", "Text",
 CellChangeTimes->{{3.8042717450291924`*^9, 
  3.8042718166446447`*^9}},ExpressionUUID->"8ef976e3-8a2c-4782-a937-\
c6f12d771d06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8042618605586357`*^9, 3.804261907252858*^9}, {
   3.8042625588306055`*^9, 3.804262562185645*^9}, 3.8042627298812265`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"783470d9-1e4d-4a59-a2f2-c0a56d47b27e"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{"i", "=", 
    RowBox[{"i", "+", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H1", "=", 
       RowBox[{"H", "[", 
        RowBox[{
         RowBox[{"ro", "[", 
          RowBox[{
           RowBox[{"28.7045", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]]}], ",", 
           RowBox[{"28.7045", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]]}], ",", 
           RowBox[{"\[Theta]r", "[", 
            RowBox[{
             RowBox[{"HingeAngles", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172"}], "]"}], 
         ",", 
         RowBox[{"\[Theta]r", "[", 
          RowBox[{
           RowBox[{"HingeAngles", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172", ",", 
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{"28.7045", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         RowBox[{"28.7045", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         RowBox[{"finalm1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H1list", ",", "H1"}], "]"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQbZEse5I34o1jZuSN0yA67HjyQxDNdUXhMYgWeZT2
FkQvmaP1DUSnawb+A9GLztYz8QHpNztXc4LoVytaBUD0DpY1siB6QkSYHIg2
OpNsCaIPzEoD01teXT90NeGNY1Pi98Mg+lXvsnbmxDeOav9PgemU3cZfVIB0
9/s4MC1j91hIC0j3fZUTBtHKT9PkVgLpfYq/wbQD42l9EK0i/w1MS90803Qh
6Y3jvy7FZhAt1v0kuDb5jePF0+dCQLSP8aR7d1PfOK4wtLsPoqO2nZ/2EEhz
TfwMpl/EW9x7BKTnJMWB6ea54W6PgXTF5AQwHRBXLuua9saxIN5ADkRLn71j
DqKfHi+3A9Htr9+6gWifBenuIBoA5X+wGQ==
  "],
 CellLabel->"In[63]:=",ExpressionUUID->"be77691c-b849-46c8-8635-7e6f8e30f86d"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{"i", "=", 
    RowBox[{"i", "+", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H2", "=", 
       RowBox[{"H", "[", 
        RowBox[{
         RowBox[{"ro", "[", 
          RowBox[{
           RowBox[{"28.7045", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]]}], ",", 
           RowBox[{"28.7045", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]]}], ",", 
           RowBox[{"\[Theta]r", "[", 
            RowBox[{
             RowBox[{"HingeAngles", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172"}], "]"}], 
         ",", 
         RowBox[{"\[Theta]r", "[", 
          RowBox[{
           RowBox[{"HingeAngles", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0.237172", ",", 
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{"28.7045", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         RowBox[{"28.7045", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         RowBox[{"finalm2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H2list", ",", "H2"}], "]"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042628623141346`*^9, 3.804262879320648*^9}, {
  3.808865818471487*^9, 3.8088658217623973`*^9}, {3.8089595542037125`*^9, 
  3.8089595552387924`*^9}, {3.8090280522281227`*^9, 3.8090280532532167`*^9}, {
  3.8090384917046824`*^9, 3.8090384936988344`*^9}, {3.809298683665683*^9, 
  3.8092986886078663`*^9}, {3.809298817896425*^9, 3.8092988186070313`*^9}, {
  3.8099036438445716`*^9, 3.809903645301853*^9}, {3.810257570453841*^9, 
  3.810257577193181*^9}, {3.81150387455322*^9, 3.8115038788533635`*^9}, {
  3.8115114934347467`*^9, 3.8115114947741785`*^9}, {3.8115141027146945`*^9, 
  3.811514103443121*^9}, {3.811514935000297*^9, 3.8115149357313557`*^9}, {
  3.8117153464746075`*^9, 3.8117153522417245`*^9}, {3.8117155769190273`*^9, 
  3.811715650343858*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"09edfde5-8040-4796-91fc-f9edd54cf28c"],

Cell[CellGroupData[{

Cell[BoxData["H1list"], "Input",
 CellChangeTimes->{{3.804271266028216*^9, 3.804271267396522*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"6a6124da-711b-428d-a2b9-effb3e5823d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8.312476542938576`*^-11", ",", 
     RowBox[{"-", "4.4994709587005544`*^-12"}], ",", "0.04060066672448766`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.03233325197776`*^-11", ",", 
     RowBox[{"-", "0.00004897448902234148`"}], ",", "0.03297907591817897`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.051510024429318`*^-10", ",", 
     RowBox[{"-", "0.00019255121930077324`"}], ",", "0.06483120782774635`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6734678094744475`*^-11", ",", "0.00047350653312065895`", ",", 
     RowBox[{"-", "0.10628476495758417`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1321622966825064`*^-10", ",", "0.0005286242688188129`", ",", 
     RowBox[{"-", "0.08899205015196428`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.63254073487108`*^-12", ",", 
     RowBox[{"-", "0.00002766583420149614`"}], ",", 
     "0.0037259321913521116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.6958191860296823`*^-11"}], ",", 
     RowBox[{"-", "0.00013644733082945895`"}], ",", "0.015313393488195362`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6787315681886136`*^-11", ",", 
     RowBox[{"-", "0.001306305247803419`"}], ",", "0.1256609052143233`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3578764249592424`*^-11", ",", 
     RowBox[{"-", "0.0013850629926287497`"}], ",", "0.11658114965800657`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.582655353518703`*^-11"}], ",", "0.0014428146960227609`", 
     ",", 
     RowBox[{"-", "0.10794720926491586`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.811718712264721*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"80e89d78-0a0d-4968-8611-e687722f4d55"]
}, Open  ]],

Cell["ENERGY =  - m . H (only m2)\[LineSeparator]", "Text",
 CellChangeTimes->{{3.8042718260255613`*^9, 3.804271837861952*^9}, {
   3.804354745447117*^9, 3.804354751148021*^9}, {3.8045098678935766`*^9, 
   3.8045099011974707`*^9}, 3.80528726017852*^9, {3.8088609116140647`*^9, 
   3.8088609155481653`*^9}, {3.808860947862999*^9, 3.80886094821743*^9}, 
   3.8093927119409924`*^9, {3.8115042011627426`*^9, 
   3.8115042025720367`*^9}},ExpressionUUID->"53244973-1ccc-4530-a008-\
fd5b76e15581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{"i", "=", 
    RowBox[{"i", "+", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"E1", "=", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"H1list", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"finalm2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E2", "=", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"H2list", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"finalm1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"Energy", ",", 
        RowBox[{
         RowBox[{"(", "E1", ")"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "19"}], ")"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"300", "*", "1.38", "*", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "23"}], ")"}]}]}], ")"}]}]}]}], "]"}], "}"}]}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQLby5qYsv4o0jR+eRSSD6/aUJW0D0swau3SCa7/W7
AyA6fl37IRDNprn0BIiW8Yw/CaKj5FiPMka9cZx23/kkiNaMrLgAoi2cl4Pp
mP03X4NoIfP/YNpgydyoywlvHFWN/KJBtLkq01OVRKB5S9zBtHxG3G8Qfdmw
F0w/PLBNVAtIn3V6Aqa5pNhYVwJpO2cFMB0bcsgARK+puQ2mp212fb0KSB/2
i34DovUW7ee8DKRfPTwDpv9pSPJcB9LP2gLA9KHmoI4LSW8cu2YkgOm9PM6P
7qa+ccwW2AWmzcr3znwIpP3mPwfTYqrR9x8B6ZUpRWB6d3ir+2MgPa9+MZi+
O++7i2vaG8c0pVxXEA0AJkGu5w==
  "],
 CellLabel->"In[66]:=",ExpressionUUID->"54967dad-8c08-4812-86a0-969f3220be82"],

Cell[CellGroupData[{

Cell[BoxData["Energy"], "Input",
 CellChangeTimes->{{3.8042712838086367`*^9, 3.8042712848448763`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"53ee7d23-1369-461f-85b2-ddaf16122892"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.41582685428342475`"}], ",", 
   RowBox[{"-", "0.2642442058907483`"}], ",", 
   RowBox[{"-", "0.9829792746477906`"}], ",", 
   RowBox[{"-", "2.5418478526253305`"}], ",", 
   RowBox[{"-", "1.7136675378598771`"}], ",", 
   RowBox[{"-", "0.0029002682095272446`"}], ",", 
   RowBox[{"-", "0.04677752247268849`"}], ",", 
   RowBox[{"-", "3.0289736524332773`"}], ",", 
   RowBox[{"-", "2.5016549696647727`"}], ",", 
   RowBox[{"-", "2.0569413796787073`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.811718730924817*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"47f24173-9725-42c5-9f4d-39940b7f85c2"]
}, Open  ]],

Cell["\<\


The iteration for calculating energy is run for all angles in the excel file, \
but the calculation for the impossible angles (any angle before 250th angle) \
is redundant therefore the below graph skips those points\
\>", "Text",
 CellChangeTimes->{{3.805289432687385*^9, 3.8052894328718877`*^9}, {
  3.80528954039326*^9, 3.8052895500683384`*^9}, {3.8052896483883405`*^9, 
  3.8052896818138504`*^9}, {3.8052898189170866`*^9, 
  3.8052898662574415`*^9}},ExpressionUUID->"1163db44-31d6-4623-9e4b-\
8e1f4c0dc23d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EmagGraph", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"Energy", ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", "Automatic", "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8044696187836514`*^9, 3.804469646124564*^9}, {
   3.8045098272453136`*^9, 3.804509857122388*^9}, {3.804509915510211*^9, 
   3.8045099856954346`*^9}, 3.8045100267466307`*^9, {3.805286197546213*^9, 
   3.8052862233432016`*^9}, {3.805286254922222*^9, 3.8052862619084883`*^9}, {
   3.8052862945353785`*^9, 3.8052863203712425`*^9}, {3.8090383200985823`*^9, 
   3.809038338816961*^9}, {3.8093962393274527`*^9, 3.809396273365883*^9}, {
   3.8093963172718787`*^9, 3.8093963810885878`*^9}, {3.810257605516667*^9, 
   3.810257609947164*^9}, {3.8102662243234825`*^9, 3.8102662358728867`*^9}, {
   3.810266281709961*^9, 3.81026644453934*^9}, {3.811503908491177*^9, 
   3.8115039094195485`*^9}, {3.811512887529767*^9, 3.8115128957400455`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e1d9428a-eb32-443f-afa5-81374fd937c3"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., -0.41582685428342475`}, {2., -0.2642442058907483}, {
       3., -0.9829792746477906}, {4., -2.5418478526253305`}, {
       5., -1.7136675378598771`}, {6., -0.0029002682095272446`}, {
       7., -0.04677752247268849}, {8., -3.0289736524332773`}, {
       9., -2.5016549696647727`}, {10., -2.0569413796787073`}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[6.272]], {{{
      1., -0.41582685428342475`}}, {{2., -0.2642442058907483}}, {{
      3., -0.9829792746477906}}, {{4., -2.5418478526253305`}}, {{
      5., -1.7136675378598771`}}, {{6., -0.0029002682095272446`}}, {{
      7., -0.04677752247268849}}, {{8., -3.0289736524332773`}}, {{
      9., -2.5016549696647727`}}, {{10., -2.0569413796787073`}}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-3.0289736524332773`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.811715671769493*^9, 3.811715881934781*^9, 
  3.81171621804523*^9, 3.8117187340444736`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"f3cec8f6-bec9-44d9-be00-707e294118aa"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 16399, 392, 668, "Input",ExpressionUUID->"3c08952d-4d52-4f35-9af1-12498108e3df"],
Cell[16982, 416, 3957, 56, 32, "Output",ExpressionUUID->"a19a9419-e983-4352-af18-7cf6d2c8b169"],
Cell[20942, 474, 3969, 56, 32, "Output",ExpressionUUID->"9f85de41-e7f4-4381-b3de-4f680e0f2a9c"],
Cell[24914, 532, 3848, 52, 32, "Output",ExpressionUUID->"4e776315-b7d3-4a0e-806f-2354d7ce89cc"]
}, Open  ]],
Cell[28777, 587, 310, 7, 34, "Text",ExpressionUUID->"558b5223-7ba7-4d79-b1d6-547ba459983c"],
Cell[CellGroupData[{
Cell[29112, 598, 3325, 93, 98, "Input",ExpressionUUID->"dd1725b2-2fe0-4d28-ab13-779cf56181b1"],
Cell[32440, 693, 145114, 2453, 256, "Output",ExpressionUUID->"2b5e8b65-c48c-4b34-a227-0e4e2c74efa1"]
}, Open  ]],
Cell[177569, 3149, 222, 3, 28, "Input",ExpressionUUID->"0cd3c221-256f-4342-9f56-9b4ff472d154"],
Cell[CellGroupData[{
Cell[177816, 3156, 13254, 281, 606, "Input",ExpressionUUID->"de89150b-bc74-4280-9500-6a5dac250a6d"],
Cell[191073, 3439, 621, 9, 32, "Output",ExpressionUUID->"06412c76-5586-4c3c-92c1-60adbcb06d71"]
}, Open  ]],
Cell[191709, 3451, 414, 8, 34, "Text",ExpressionUUID->"a39b1e15-c657-444a-b39b-db7b925c3301"],
Cell[192126, 3461, 341, 7, 34, "Text",ExpressionUUID->"8ef976e3-8a2c-4782-a937-c6f12d771d06"],
Cell[192470, 3470, 431, 9, 67, "Input",ExpressionUUID->"783470d9-1e4d-4a59-a2f2-c0a56d47b27e"],
Cell[192904, 3481, 2052, 53, 55, "Input",ExpressionUUID->"be77691c-b849-46c8-8635-7e6f8e30f86d"],
Cell[194959, 3536, 2383, 55, 55, "Input",ExpressionUUID->"09edfde5-8040-4796-91fc-f9edd54cf28c"],
Cell[CellGroupData[{
Cell[197367, 3595, 177, 2, 28, "Input",ExpressionUUID->"6a6124da-711b-428d-a2b9-effb3e5823d1"],
Cell[197547, 3599, 1789, 44, 82, "Output",ExpressionUUID->"80e89d78-0a0d-4968-8611-e687722f4d55"]
}, Open  ]],
Cell[199351, 3646, 490, 7, 56, "Text",ExpressionUUID->"53244973-1ccc-4530-a008-fd5b76e15581"],
Cell[199844, 3655, 1968, 56, 67, "Input",ExpressionUUID->"54967dad-8c08-4812-86a0-969f3220be82"],
Cell[CellGroupData[{
Cell[201837, 3715, 181, 2, 28, "Input",ExpressionUUID->"53ee7d23-1369-461f-85b2-ddaf16122892"],
Cell[202021, 3719, 649, 14, 32, "Output",ExpressionUUID->"47f24173-9725-42c5-9f4d-39940b7f85c2"]
}, Open  ]],
Cell[202685, 3736, 523, 11, 78, "Text",ExpressionUUID->"1163db44-31d6-4623-9e4b-8e1f4c0dc23d"],
Cell[CellGroupData[{
Cell[203233, 3751, 1089, 17, 28, "Input",ExpressionUUID->"e1d9428a-eb32-443f-afa5-81374fd937c3"],
Cell[204325, 3770, 2937, 70, 232, "Output",ExpressionUUID->"f3cec8f6-bec9-44d9-be00-707e294118aa"]
}, Open  ]]
}
]
*)

